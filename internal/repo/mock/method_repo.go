// Code generated by MockGen. DO NOT EDIT.
// Source: method_repo.go

// Package mock is a generated GoMock package.
package mock

import (
	model "ova-method-api/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMethodRepo is a mock of MethodRepo interface.
type MockMethodRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMethodRepoMockRecorder
}

// MockMethodRepoMockRecorder is the mock recorder for MockMethodRepo.
type MockMethodRepoMockRecorder struct {
	mock *MockMethodRepo
}

// NewMockMethodRepo creates a new mock instance.
func NewMockMethodRepo(ctrl *gomock.Controller) *MockMethodRepo {
	mock := &MockMethodRepo{ctrl: ctrl}
	mock.recorder = &MockMethodRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMethodRepo) EXPECT() *MockMethodRepoMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockMethodRepo) Add(items []model.Method) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", items)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockMethodRepoMockRecorder) Add(items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockMethodRepo)(nil).Add), items)
}

// Describe mocks base method.
func (m *MockMethodRepo) Describe(id uint64) (*model.Method, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Describe", id)
	ret0, _ := ret[0].(*model.Method)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Describe indicates an expected call of Describe.
func (mr *MockMethodRepoMockRecorder) Describe(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Describe", reflect.TypeOf((*MockMethodRepo)(nil).Describe), id)
}

// List mocks base method.
func (m *MockMethodRepo) List(limit, offset uint64) ([]model.Method, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", limit, offset)
	ret0, _ := ret[0].([]model.Method)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockMethodRepoMockRecorder) List(limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockMethodRepo)(nil).List), limit, offset)
}
